name: Yari Release

# FIXME: Restrict this more
on:
  # push:
  #   # Trigger anytime a release tag is created.
  #   tags:
  #     - "v*"
  workflow_dispatch:

jobs:
  builder-windows:
    name: Build Yari on Windows

    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: |
            3.8
            3.9
            3.10
            3.11

      - name: Setup Nuget.exe
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: 'latest'

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Install YARA Dependencies
        run: nuget.exe restore windows/vs2017/yara.sln
        working-directory: ./yari-sys/yara

      - name: Build YARA
        run: msbuild /m /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset="v142" /p:WindowsTargetPlatformVersion="10.0.19041.0" windows/vs2017/yara.sln
        working-directory: ./yari-sys/yara
        shell: cmd

      - name: Build yari-sys
        run: cargo build
        working-directory: ./yari-sys

      - name: Build Python wheels
        run: |
          pip install maturin
          maturin build -f --release --strip
        working-directory: ./yari-py

      - name: List artifacts (remove_me)
        run: ls -lahR target/wheels

      # - name: Archive Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: RetDec-${{ github.ref_name }}-${{ runner.os }}-Release
      #     path: RetDec-*

  # release:
  #   name: Release RetDec

  #   runs-on: ubuntu-latest
  #   needs: builder

  #   steps:
  #     - uses: actions/checkout@v3

  #     # Fetch artifacts from the build step.
  #     - name: Fetch Artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: artifacts

  #     # Create a release.
  #     - name: Release
  #       if: startsWith(github.ref, 'refs/tags/')
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         name: Release ${{ github.ref_name }}
  #         generate_release_notes: true
  #         files: |
  #           LICENSE*
  #           CHANGELOG.md
  #           artifacts/*/*.tar.xz
  #           artifacts/*/*.7z
